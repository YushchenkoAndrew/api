basePath: /api
definitions:
  models.Error:
    properties:
      message:
        example: 'Server side error: Something went wrong'
        type: string
      result:
        items:
          type: string
        type: array
      status:
        example: ERR
        type: string
    type: object
  models.Info:
    properties:
      Clicks:
        example: 2
        type: integer
      Countries:
        example: UK,US
        type: string
      CreatedAt:
        example: "2021-08-06"
        type: string
      ID:
        type: integer
      Media:
        example: 3
        type: integer
      Views:
        example: 1
        type: integer
      Visitors:
        example: 4
        type: integer
    type: object
  models.Ping:
    properties:
      message:
        example: pong
        type: string
    type: object
  models.ReqInfo:
    properties:
      Clicks:
        type: integer
      Countries:
        description: |-
          ID        uint32    `json:"id" xml:"id"`
          CreatedAt *time.Time `json:"CreatedAt" xml:"CreatedAt"`
        type: string
      Media:
        type: integer
      Views:
        type: integer
      Visitors:
        type: integer
    type: object
  models.ReqWorld:
    properties:
      Country:
        description: |-
          ID        uint32
          UpdatedAt time.Time
        type: string
      Visitors:
        type: integer
    type: object
  models.StatInfo:
    properties:
      clicks:
        type: integer
      media:
        type: integer
      views:
        type: integer
      visitors:
        type: integer
    type: object
  models.Success:
    properties:
      items:
        example: 1
        type: integer
      limit:
        example: 20
        type: integer
      page:
        example: 0
        type: integer
      result:
        type: object
      status:
        example: OK
        type: string
      totalItems:
        example: 20
        type: integer
    type: object
  models.World:
    properties:
      Country:
        example: UK
        type: string
      ID:
        type: integer
      UpdatedAt:
        example: "2021-08-27T16:17:53.119571+03:00"
        type: string
      Visitors:
        example: 5
        type: integer
    type: object
host: 127.0.0.1:31337
info:
  contact:
    email: AndrewYushchenko@gmail.com
    name: API Support
    url: https://mortis-grimreaper.ddns.net/projects
  description: Remake of my previous attampted on creating API with Node.js
  license:
    name: MIT
    url: https://github.com/YushchenkoAndrew/API_Server/blob/master/LICENSE
  title: Gin API
  version: "1.0"
paths:
  /info:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Instance :id
        in: query
        name: id
        type: integer
      - description: CreatedAt date
        in: query
        name: created_at
        type: string
      - description: 'Countries: ''UK,US'''
        in: query
        name: countries
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Success'
            - properties:
                result:
                  items:
                    type: string
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Delete Info by Query
      tags:
      - Info
    get:
      consumes:
      - application/json
      parameters:
      - description: Instance :id
        in: query
        name: id
        type: integer
      - description: CreatedAt date
        in: query
        name: created_at
        type: string
      - description: 'Countries: ''UK,US'''
        in: query
        name: countries
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Success'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/models.Info'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Read All Info
      tags:
      - Info
    post:
      consumes:
      - application/json
      description: '''CreatedAt'' setted automatically'
      parameters:
      - description: Info Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/models.ReqInfo'
      produces:
      - application/json
      - application/xml
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/models.Success'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/models.Info'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Create one instace of Info
      tags:
      - Info
    put:
      consumes:
      - application/json
      parameters:
      - description: Instance :id
        in: query
        name: id
        type: integer
      - description: CreatedAt date
        in: query
        name: created_at
        type: string
      - description: 'Countries: ''UK,US'''
        in: query
        name: countries
        type: string
      - description: Info Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/models.ReqInfo'
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Success'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/models.Info'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Update Info by Query
      tags:
      - Info
  /info/{date}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Created at instance
        in: path
        name: date
        required: true
        type: string
      - description: Info Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/models.ReqInfo'
      produces:
      - application/json
      - application/xml
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/models.Success'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/models.Info'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Create/Update Info
      tags:
      - Info
  /info/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Instance id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Success'
            - properties:
                result:
                  items:
                    type: string
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Delete Info by :id
      tags:
      - Info
    get:
      consumes:
      - application/json
      parameters:
      - description: Instance id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Success'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/models.Info'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Read Info by :id
      tags:
      - Info
    put:
      consumes:
      - application/json
      parameters:
      - description: Instance id
        in: path
        name: id
        required: true
        type: integer
      - description: Info Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/models.ReqInfo'
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Success'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/models.Info'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Update Info by :id
      tags:
      - Info
  /info/list:
    post:
      consumes:
      - application/json
      parameters:
      - description: List of Info Data
        in: body
        name: model
        required: true
        schema:
          items:
            $ref: '#/definitions/models.ReqInfo'
          type: array
      produces:
      - application/json
      - application/xml
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/models.Success'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/models.Info'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Create Info from list of objects
      tags:
      - Info
  /info/range:
    get:
      consumes:
      - application/json
      parameters:
      - description: CreatedAt date >= start
        in: query
        name: start
        required: true
        type: string
      - description: CreatedAt date <= end
        in: query
        name: end
        type: string
      - description: Column which final result will be sorted by
        in: query
        name: orderBy
        type: string
      - description: Sort by direction
        in: query
        name: desc
        type: integer
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Success'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/models.Info'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Get Info data by date Range
      tags:
      - Info
  /info/sum:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Success'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/models.StatInfo'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Get Info Sum
      tags:
      - Info
  /ping:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Ping'
      summary: Ping/Pong
  /world:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Instance :id
        in: query
        name: id
        type: integer
      - description: UpdatedAt date
        in: query
        name: updated_at
        type: string
      - description: 'Country: ''UK'''
        in: query
        name: country
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Success'
            - properties:
                result:
                  items:
                    type: string
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Delete World by Query
      tags:
      - World
    get:
      consumes:
      - application/json
      parameters:
      - description: Instance :id
        in: query
        name: id
        type: integer
      - description: UpdatedAt date
        in: query
        name: updated_at
        type: string
      - description: 'Country: ''UK'''
        in: query
        name: country
        type: string
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Success'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/models.World'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Read All World
      tags:
      - World
    post:
      consumes:
      - application/json
      parameters:
      - description: World Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/models.ReqWorld'
      produces:
      - application/json
      - application/xml
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/models.Success'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/models.World'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Create one instace of World
      tags:
      - World
    put:
      consumes:
      - application/json
      parameters:
      - description: Instance :id
        in: query
        name: id
        type: integer
      - description: UpdatedAt date
        in: query
        name: updated_at
        type: string
      - description: 'Country: ''UK'''
        in: query
        name: country
        type: string
      - description: World Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/models.ReqWorld'
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Success'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/models.World'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Update World by Query
      tags:
      - World
  /world/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Instance id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Success'
            - properties:
                result:
                  items:
                    type: string
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Delete World by :id
      tags:
      - World
    get:
      consumes:
      - application/json
      parameters:
      - description: Instance id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Success'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/models.World'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Read World by :id
      tags:
      - World
    put:
      consumes:
      - application/json
      parameters:
      - description: Instance id
        in: path
        name: id
        required: true
        type: integer
      - description: World Data
        in: body
        name: model
        required: true
        schema:
          $ref: '#/definitions/models.ReqWorld'
      produces:
      - application/json
      - application/xml
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Success'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/models.World'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Update World by :id
      tags:
      - World
  /world/list:
    post:
      consumes:
      - application/json
      parameters:
      - description: List of World Data
        in: body
        name: model
        required: true
        schema:
          items:
            $ref: '#/definitions/models.ReqWorld'
          type: array
      produces:
      - application/json
      - application/xml
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/models.Success'
            - properties:
                result:
                  items:
                    $ref: '#/definitions/models.World'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Create World from list of objects
      tags:
      - World
swagger: "2.0"
